<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
								http://www.springframework.org/schema/beans/spring-beans.xsd 	"> 
	
	<!-- xml 에 DB 정보 기술안하고 properties 를 만들어 시스템관리자만 DB 정보 접근하도록 설정. 
    ${jdbc.driverClassName} 형식으로 접근 가능. 
     
     또는 아래와 같은 방식으로 가능하다.
	beans 선언부에 아래 경로 추가해야함.
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.1.xsd"
	-->
	<!-- <context:property-placeholder location="/WEB-INF/config/*.properties"/>  -->
	<bean id="viewResolver" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations" value="/WEB-INF/config/*.properties"/>
		<property name="fileEncoding" value="UTF-8"/>
	</bean> 
	
	<!--  dbcp을 pom.xml에 추가.   커넥션 풀 사용 -->
	<!-- SimpleDriverDataSource 는 매번 커넥션을 맺기 때문에 TEST 에 적합. 실무 비적합. -->
	<!-- <bean id="dataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource"> -->
	<!-- apache 의 Common DBCP 사용할 경우 BasicDataSource 사용 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>
	
	<!--   Spring에서 제공하는 Hibernate4용 SessionFactory 생성 . 하이버네이트의 설정을 관리한다	-->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="configLocation" value="/WEB-INF/config/hibernate.cfg.xml"/>
        
        <!-- 하이버네이트 맵핑 파일을 폴더로 묶어서 관리. 개별로 적을 필요 없음 -->
        <property name="mappingDirectoryLocations">
       		 <list>
                <value>/WEB-INF/hbm</value>
            </list>
        </property>
        
       <!--  spring 에서 sessionFactory 생성 시 모델 데이터 초기화 위해 2가지 방식 사용.
        1. property name = "annotatatedClasses"
        1. property name = "packagesToScan"
        
        1의 경우 모델 위치 지정
		<list>
			<value>model.T_DATA_SET</value>
			<value>model.T_DATA_INFO</value>
		</list>
		
		2의 경우 패키지 위치 지정하여 스캔하는 방식
		<property name="packagesToScan" value="model"/>  -->
        <property name="packagesToScan" value="com.main" />
	</bean>
	
	<!-- 하이버네이트 트렌젝션 매니저 -->
	<bean id="transcationManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	
</beans>
